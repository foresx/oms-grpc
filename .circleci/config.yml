version: 2
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/app
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      #      - run: sudo apt-get update && sudo apt-get install postgresql-client-9.6
      #      - run: whoami
      #      - run: psql -h localhost -d postgres -U postgres -c "CREATE DATABASE oms_test;"
      - run:
          name: Hash dependency info
          command: find . -name "*.gradle.kts" -type f | sort | xargs md5sum > /tmp/deps-checksum.txt
      - restore_cache:
          keys:
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          keys:
            - gradle-cache-{{ checksum "/tmp/deps-checksum.txt" }}
            - gradle-cache
      - run:
          name: Downloading Dependencies
          command: ./gradlew resolveDependencies
      - save_cache:
          paths:
            - ~/.gradle/wrapper/
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches/
          key: gradle-cache-{{ checksum "/tmp/deps-checksum.txt" }}
      - run:
          name: Building Project
          command: ./gradlew build --no-daemon
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - run:
          name: Save junit report
          command: |
            mkdir -p ~/test-reports/junit/
            find . -type d -regex ".*/build/reports/tests/test" -exec sh -c 'proj=`echo "$0" |cut -d/ -f2`; cp -r "$0" ~/test-reports/junit/${proj} ' {} \;
          when: always
      - run:
          name: Save checkstyle report
          command: |
            mkdir -p ~/test-reports/checkstyle/
            find . -type d -regex ".*/build/reports/checkstyle" -exec sh -c 'proj=`echo "$0" |cut -d/ -f2`; cp -r "$0" ~/test-reports/checkstyle/${proj} ' {} \;
          when: always
      - run:
          name: Save jacoco report
          command: |
            mkdir -p ~/test-reports/jacoco/
            find . -type d -regex ".*/build/reports/tests/test" -exec sh -c 'proj=`echo "$0" |cut -d/ -f2`; cp -r "$0" ~/test-reports/jacoco/${proj} ' {} \;
          when: always
      - store_artifacts:
          path: ~/test-reports